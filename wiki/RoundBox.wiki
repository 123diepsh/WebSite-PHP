#labels Class,WebSite-PHP,RoundBox,WebSitePhpObject,RoundBox
= Class RoundBox =

WebSitePhpObject
   |
   --RoundBox



Location: /display/advanced_object/RoundBox.class.php

----


*Remarks*

Class RoundBox


WebSite-PHP : PHP Framework 100% object (http://www.website-php.com)  Copyright (c) 2009-2011 WebSite-PHP.com  PHP versions >= 5.2Licensed under The MIT License  Redistributions of files must retain the above copyright notice.


*author:* Emilien MOREL <>

*version:* 1.0.99

*copyright:* WebSite-PHP.com 26/05/2011

*link:* 

*since:* 1.0.17

*access:* public


----
== Class Variable Summary ==
		
----
== Class Constant Summary ==

			* `ALIGN_CENTER` = ` 'center'`
		
		Box alignment
			* `ALIGN_JUSTIFY` = ` 'justify'`
		
		Box alignment
			* `ALIGN_LEFT` = ` 'left'`
		
		Box alignment
			* `ALIGN_RIGHT` = ` 'right'`
		
		Box alignment
			* `STYLE_MAIN` = ` '1'`
		
		Box style
			* `STYLE_SECOND` = ` '2'`
		
		Box style
			* `VALIGN_BOTTOM` = ` 'bottom'`
		
		Box vertical alignment
			* `VALIGN_CENTER` = ` 'center'`
		
		Box vertical alignment
			* `VALIGN_TOP` = ` 'top'`
		
		Box vertical alignment
	
----
== Inherited Class Constant Summary ==


----
== Inherited Class Variable Summary ==

=== Inherited From Class WebSitePhpObject ===

			* `WebSitePhpObject::$is_javascript_object` = ` false`
		
		
			* `WebSitePhpObject::$is_new_object_after_init` = ` false`
		
		
			* `WebSitePhpObject::$object_change` = ` false`
		
		
			* `WebSitePhpObject::$tag` = ` ''`
		
		
		


----
== Method Summary == 

																																																						
== Inherited Method Summary == 

=== Inherited From Class WebSitePhpObject ===

			* `WebSitePhpObject::__construct()`
		Constructor WebSitePhpObject
			* `WebSitePhpObject::addCss()`
		Method addCss
			* `WebSitePhpObject::addJavaScript()`
		Method addJavaScript
			* `WebSitePhpObject::displayJavascriptTag()`
		Method displayJavascriptTag
			* `WebSitePhpObject::getAjaxRender()`
		Method getAjaxRender
			* `WebSitePhpObject::getCssArray()`
		Method getCssArray
			* `WebSitePhpObject::getJavaScriptArray()`
		Method getJavaScriptArray
			* `WebSitePhpObject::getJavascriptTagClose()`
		Method getJavascriptTagClose
			* `WebSitePhpObject::getJavascriptTagOpen()`
		Method getJavascriptTagOpen
			* `WebSitePhpObject::getName()`
		Method getName
			* `WebSitePhpObject::getPage()`
		Method getPage
			* `WebSitePhpObject::getRegisterObjects()`
		Method getRegisterObjects
			* `WebSitePhpObject::getTag()`
		Method getTag
			* `WebSitePhpObject::isEventObject()`
		Method isEventObject
			* `WebSitePhpObject::isJavascriptObject()`
		Method isJavascriptObject
			* `WebSitePhpObject::isObjectChange()`
		Method isObjectChange
			* `WebSitePhpObject::render()`
		Method render
			* `WebSitePhpObject::setTag()`
		Method setTag
	
----
== Method Detail ==



= RoundBox::__construct =

*__construct(*
[*string*
_$style_content_ = '1'], [*string*
_$id_ = 'main_box'], [*string*
_$width_ = '100%'], [*string*
_$height_ = &quot;&quot;], [*string*
_$move_ = false]* );*


Overrides WebSitePhpObject::__construct() (Constructor WebSitePhpObject)
	

	
*Parameters*
			_$style_content_ style of the content (Box::STYLE_MAIN or Box::STYLE_SECOND) [default value: 1]
			_$id_ unique id of the box [default value: main_box]
			_$width_ width of the box [default value: 100%]
			_$height_ height of the bo
			_$move_ if box can be move [default value: false]
		
*Remarks*

Constructor RoundBox




= RoundBox::forceBoxWithPicture =

*forceBoxWithPicture(*
*boolean*
_$bool_, [*string*
_$border_color_ = &quot;&quot;]* );*


	

	
*Parameters*
			_$bool_ 
			_$border_color_ 
		
*Remarks*

Method forceBoxWithPicture


*since:* 1.0.35

*access:* public



= RoundBox::getAjaxRender =

*getAjaxRender(*
* );*


Overrides WebSitePhpObject::getAjaxRender() (Method getAjaxRender)
	

	
*Returns*
		javascript code to update initial html of object RoundBox (call with AJAX)

*Remarks*

Method getAjaxRender


*since:* 1.0.35

*access:* public



= RoundBox::render =

*render(*
[*boolean*
_$ajax_render_ = false]* );*


Overrides WebSitePhpObject::render() (Method render)
	

	
*Parameters*
			_$ajax_render_ [default value: false]
		
*Returns*
		html code of object RoundBox

*Remarks*

Method render


*since:* 1.0.35

*access:* public



= RoundBox::setAlign =

*setAlign(*
*string*
_$align_* );*


	

	
*Parameters*
			_$align_ 
		
*Remarks*

Method setAlign


*since:* 1.0.35

*access:* public



= RoundBox::setContent =

*setContent(*
*object|string*
_$content_* );*


	

	
*Parameters*
			_$content_ content of the box
		
*Remarks*

Method setContent


*since:* 1.0.35

*access:* public



= RoundBox::setDraggable =

*setDraggable(*
[*string*
_$bool_ = true], [*string*
_$revert_ = false]* );*


	

	
*Parameters*
			_$bool_ if box can be move [default value: true]
			_$revert_ if box revert first place when dropped [default value: false]
		
*Remarks*

Method setDraggable


*since:* 1.0.35

*access:* public



= RoundBox::setHeight =

*setHeight(*
*integer*
_$height_* );*


	

	
*Parameters*
			_$height_ 
		
*Remarks*

Method setHeight


*since:* 1.0.35

*access:* public



= RoundBox::setPaddingBottom =

*setPaddingBottom(*
*integer*
_$padding_* );*


	

	
*Parameters*
			_$padding_ bottom of the box
		
*Remarks*

Method setPaddingBottom


*since:* 1.0.35

*access:* public



= RoundBox::setPaddingTop =

*setPaddingTop(*
*integer*
_$padding_* );*


	

	
*Parameters*
			_$padding_ top of the box
		
*Remarks*

Method setPaddingTop


*since:* 1.0.35

*access:* public



= RoundBox::setShadow =

*setShadow(*
*boolean*
_$shadow_* );*


	

	
*Parameters*
			_$shadow_ 
		
*Remarks*

Method setShadow


*since:* 1.0.35

*access:* public



= RoundBox::setValign =

*setValign(*
*string*
_$valign_* );*


	

	
*Parameters*
			_$valign_ 
		
*Remarks*

Method setValign


*since:* 1.0.35

*access:* public



= RoundBox::setWidth =

*setWidth(*
*integer*
_$width_* );*


	

	
*Parameters*
			_$width_ 
		
*Remarks*

Method setWidth


*since:* 1.0.35

*access:* public



----

== Variable Detail ==

----
== Class Constant Detail ==

* `ALIGN_CENTER` = ` 'center'` (line 43)


*Remarks*

Box alignment


*access:* public


* `ALIGN_JUSTIFY` = ` 'justify'` (line 45)


*Remarks*

Box alignment


*access:* public


* `ALIGN_LEFT` = ` 'left'` (line 42)


*Remarks*

Box alignment


*access:* public


* `ALIGN_RIGHT` = ` 'right'` (line 44)


*Remarks*

Box alignment


*access:* public


* `STYLE_MAIN` = ` '1'` (line 33)


*Remarks*

Box style


*access:* public


* `STYLE_SECOND` = ` '2'` (line 34)


*Remarks*

Box style


*access:* public


* `VALIGN_BOTTOM` = ` 'bottom'` (line 55)


*Remarks*

Box vertical alignment


*access:* public


* `VALIGN_CENTER` = ` 'center'` (line 54)


*Remarks*

Box vertical alignment


*access:* public


* `VALIGN_TOP` = ` 'top'` (line 53)


*Remarks*

Box vertical alignment


*access:* public



----
